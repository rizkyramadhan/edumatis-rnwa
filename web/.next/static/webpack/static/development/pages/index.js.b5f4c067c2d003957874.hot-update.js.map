{"version":3,"file":"static/webpack/static/development/pages/index.js.b5f4c067c2d003957874.hot-update.js","sources":["webpack:///./pages/app/screens/admin/Pengumuman/PengumumanDetail.tsx"],"sourcesContent":["import UIBody from \"@app/libs/ui/UIBody\";\nimport UICol from \"@app/libs/ui/UICol\";\nimport UIContainer from \"@app/libs/ui/UIContainer\";\nimport UIFieldText from \"@app/libs/ui/UIFieldText\";\nimport UIHead from \"@app/libs/ui/UIHead\";\nimport UIRow from \"@app/libs/ui/UIRow\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React from \"react\";\nimport UIFieldSelectNative from \"@app/libs/ui/UIFieldSelectNative\";\nimport KelasPicker from \"../Kelas/KelasPicker\";\nimport { Text } from \"react-native\";\nimport UIButton from \"@app/libs/ui/UIButton\";\nimport updateRecord from \"@app/libs/queries/crud/updateRecord\";\nimport createRecord from \"@app/libs/queries/crud/createRecord\";\n\nexport default observer(({ navigation }: any) => {\n  const data = useObservable({\n    loading: true,\n    form: navigation.getParam(\"item\")\n  });\n\n  return (\n    <UIContainer>\n      <UIHead\n        title={` Pengumuman ` + (data.form.id ? `#${data.form.id}` : `Baru`)}\n        onBack={() => {\n          navigation.goBack();\n        }}\n      >\n        <UIButton\n          onPress={async () => {\n            if (data.form.id) {\n              data.form.id = parseInt(data.form.id);\n              await updateRecord(\"pengumuman\", data.form);\n            } else {\n              await createRecord(\"pengumuman\", data.form);\n            }\n            navigation.goBack();\n          }}\n        >\n          Simpan\n        </UIButton>\n      </UIHead>\n      <UIBody>\n        <UIFieldText\n          label=\"Text Pengumuman\"\n          setValue={(value: any) => {\n            data.form.pengumuman = value;\n          }}\n          value={data.form.pengumuman}\n        />\n\n        <UIRow>\n          <UICol size={4}>\n            <UIFieldSelectNative\n              label=\"Status\"\n              items={[\n                { value: \"aktif\", label: \"Aktif\" },\n                { value: \"non-aktif\", label: \"Non-Aktif\" }\n              ]}\n              value={data.form.status}\n              setValue={(v: any) => {\n                data.form.status = v;\n              }}\n            />\n          </UICol>\n        </UIRow>\n        <KelasPicker\n          form={data.form}\n          renderKelas={(kelas: any, detail: any) => {\n            return (\n              <Text\n                style={{ paddingLeft: 15, paddingVertical: 10, color: \"#333\" }}\n              >\n                {Object.keys(kelas.murid).length === 1\n                  ? `Untuk semua murid di kelas ${detail.nama_kelas}`\n                  : `Khusus untuk murid dibawah ini`}\n              </Text>\n            );\n          }}\n        />\n      </UIBody>\n    </UIContainer>\n  );\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;A","sourceRoot":""}