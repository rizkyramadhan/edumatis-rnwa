{"version":3,"file":"static/webpack/static/development/pages/index.js.ea8f05507168d59e8806.hot-update.js","sources":["webpack:///./pages/app/screens/siswa/Kewajiban/Kewajiban.tsx"],"sourcesContent":["import StackNav from \"@app/libs/nav/StackNav\";\nimport rawQuery from \"@app/libs/queries/crud/rawQuery\";\nimport { getSession } from \"@app/libs/queries/user/getsetSession\";\nimport UIBody from \"@app/libs/ui/UIBody\";\nimport UIButton from \"@app/libs/ui/UIButton\";\nimport UIContainer from \"@app/libs/ui/UIContainer\";\nimport UIHead from \"@app/libs/ui/UIHead\";\nimport UIList from \"@app/libs/ui/UIList\";\nimport UIListItem from \"@app/libs/ui/UIListItem\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Text, View } from \"react-native\";\nimport KewajibanDetail from \"./KewajibanDetail\";\nimport dayjs from \"dayjs\";\n\nconst Kewajiban = observer(({ navigation }: any) => {\n  const data = useObservable({\n    list: [],\n    loading: true\n  });\n  useEffect(() => {\n    let fetch = async () => {\n      const session = await getSession();\n      const kelasRaw = await rawQuery(`{\n        kelas_murid(where: {murid_id: {_eq: ${session.murid.id}}}) {\n          kelas_id\n        }\n      }`);\n\n      if (kelasRaw && kelasRaw.kelas_murid && kelasRaw.kelas_murid.length > 0) {\n        const kelas = kelasRaw.kelas_murid.map((k: any) => {\n          return k.kelas_id.toString();\n        });\n        const monthStart = dayjs()\n          .startOf(\"month\")\n          .subtract(1, \"day\")\n          .format(\"YYYY-MM-DD\");\n        const monthEnd = dayjs()\n          .endOf(\"month\")\n          .add(1, \"day\")\n          .format(\"YYYY-MM-DD\");\n\n        const result = await rawQuery(\n          `{\n          kewajiban(order_by: [{tipe_pembayaran: asc}, {id: asc}], \n            where: {kelas: {_has_keys_any: ${JSON.stringify(kelas)}}}) {\n            id\n            nama_kewajiban\n            nominal\n            tipe_pembayaran\n            kelas\n            transaksi(\n              where: {\n                kewajiban: {\n                  _or:[\n                    {_and:[\n                      {tipe_pembayaran:{_eq:\"Bulanan\"}},\n                      {transaksi: {\n                       \t_and:[\n                          {tstamp: {_gte: \"${monthStart}\"}},\n                          {tstamp: {_lte: \"${monthEnd}\"}},\n                        ] \n                      }}\n                    ]},\n                    {tipe_pembayaran:{_eq:\"Insidentil\"}}\n                  ]\n                }\n              }\n            ) {\n              id\n              status\n              tstamp\n              detail\n            }\n          }  \n        }`);\n\n        data.list = result.kewajiban.map((item: any) => {\n          let nominal = item.nominal;\n          Object.keys(item.kelas).forEach((i: any) => {\n            const k = item.kelas[i];\n            if (k.nominal !== undefined) {\n              nominal = k.nominal;\n            }\n            k.murid.forEach((m: any) => {\n              if (m && session.murid && m.id === session.murid.id) {\n                if (m.nominal !== undefined) {\n                  nominal = m.nominal;\n                }\n              }\n            });\n            item.nominal = nominal;\n          });\n\n          item.status = item.nominal === 0 ? \"Lunas\" : \"Belum Lunas\";\n          item.transaksi.forEach((t: any) => {\n            if (item.tipe_pembayaran === \"Insidentil\") {\n              if (t.status === \"success\") {\n                item.status = \"Lunas\";\n              }\n            } else {\n              if (t.status === \"success\") {\n                item.status = \"Lunas;\"\n              }\n            }\n          });\n\n          return item;\n        });\n      }\n\n      data.loading = false;\n    };\n    fetch();\n  }, []);\n  return (\n    <UIContainer>\n      <UIHead title=\"Kewajiban\">\n        <UIButton\n          size=\"small\"\n          onPress={() => {\n            navigation.navigate(\"KewajibanDetail\", {\n              item: {\n                nominal: 100000,\n                kelas: {}\n              }\n            });\n          }}\n        >\n          + Kewajiban Baru\n        </UIButton>\n      </UIHead>\n      <UIBody>\n        <UIList\n          data={data.list}\n          loading={data.loading}\n          render={(list: any) => {\n            const item = list.item;\n            return (\n              <UIListItem\n                onPress={() => {\n                  navigation.navigate(\"KewajibanDetail\", {\n                    item: item\n                  });\n                }}\n              >\n                <View>\n                  <Text\n                    style={{ fontSize: 15, fontWeight: \"bold\", color: \"#555\" }}\n                  >\n                    {item.nama_kewajiban}\n                  </Text>\n                  <Text style={{ fontSize: 14 }}>\n                    Rp {item.nominal.toLocaleString()} ({item.status})\n                  </Text>\n                </View>\n                <View>\n                  <Text>{item.tipe_pembayaran}</Text>\n                </View>\n              </UIListItem>\n            );\n          }}\n        />\n      </UIBody>\n    </UIContainer>\n  );\n});\n\nexport default StackNav({\n  Kewajiban: { screen: Kewajiban },\n  KewajibanDetail: { screen: KewajibanDetail }\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AAIA;AAhBA;AAAA;AACA;AADA;AAqBA;AAmCA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxFA;AA0FA;AACA;AA3FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA2FA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;;;;A","sourceRoot":""}