{"version":3,"file":"static/webpack/static/development/pages/index.js.463900479eb8c9f870b1.hot-update.js","sources":["webpack:///./pages/app/screens/admin/Transaksi/Transaksi.tsx"],"sourcesContent":["import rawQuery from \"@app/libs/queries/crud/rawQuery\";\nimport UIBody from \"@app/libs/ui/UIBody\";\nimport UIButton from \"@app/libs/ui/UIButton\";\nimport UIContainer from \"@app/libs/ui/UIContainer\";\nimport UIHead from \"@app/libs/ui/UIHead\";\nimport UIList from \"@app/libs/ui/UIList\";\nimport UIListItem from \"@app/libs/ui/UIListItem\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Text, View } from \"react-native\";\nimport StackNav from \"@app/libs/nav/StackNav\";\nimport TransaksiDetail from \"./TransaksiDetail\";\nconst dayjs = require(\"dayjs\");\nimport RelativeTime from \"dayjs/plugin/relativeTime\";\nimport get from \"lodash.get\";\n\ndayjs.extend(RelativeTime);\nconst Transaksi = observer(({ navigation }: any) => {\n  const data = useObservable({\n    list: [],\n    loading: true\n  });\n  useEffect(() => {\n    let fetch = async () => {\n      const result = await rawQuery(`{\n        transaksi(order_by: {tstamp: asc}) {\n          id\n          status\n          tstamp\n          amount: detail(path:\"amount\")\n          detail(path:\"status\")\n          paid(path:\"status\")\n          murid {\n            id\n            nama_murid\n            nsa\n            kelas_murids {\n              kelas {\n                nama_kelas\n              }\n            }\n          }\n          kewajiban {\n            nama_kewajiban\n          }\n        }\n      }\n      `);\n      data.list = result.transaksi;\n      data.loading = false;\n    };\n    fetch();\n  }, []);\n\n  return (\n    <UIContainer>\n      <UIHead navigation={navigation} title=\"Transaksi\">\n        <UIButton\n          size=\"small\"\n          onPress={() => {\n            navigation.navigate(\"TransaksiDetail\", {\n              item: {\n                nominal: 100000,\n                kelas: {}\n              }\n            });\n          }}\n        >\n          + Transaksi Baru\n        </UIButton>\n      </UIHead>\n      <UIBody>\n        <UIList\n          data={data.list}\n          loading={data.loading}\n          render={(list: any) => {\n            const item = list.item;\n\n            const tgl = dayjs(item.tstamp);\n            const fromday = tgl.fromNow();\n            const kelas =\n              get(item, \"murid.kelas_murids[0].kelas.nama_kelas\") ||\n              \"Semua Kelas\";\n            const nominal = parseInt(item.amount || item.nominal);\n            let status = (item.paid || item.detail || item.status).toLowerCase();\n            if (status === \"paid\") status = \"success\";\n            \n            return (\n              <UIListItem\n                onPress={() => {\n                  navigation.navigate(\"TransaksiDetail\", {\n                    item: item\n                  });\n                }}\n              >\n                <View>\n                  <Text\n                    style={{ fontSize: 15, fontWeight: \"bold\", color: \"#555\" }}\n                  >\n                    #{item.id} {item.kewajiban.nama_kewajiban} - Rp{\" \"}\n                    {(nominal || 0).toLocaleString()}{\" \"}\n                    ({status})\n                  </Text>\n                  <Text style={{ fontSize: 14 }}>\n                    {item.murid.nama_murid} - {kelas}\n                  </Text>\n                </View>\n                <View style={{ alignItems: \"flex-end\" }}>\n                  <Text>{fromday}</Text>\n                  <Text style={{ fontSize: 12 }}>\n                    {tgl.format(\"DD MMM YYYY - hh.mm\")}\n                  </Text>\n                </View>\n              </UIListItem>\n            );\n          }}\n        />\n      </UIBody>\n    </UIContainer>\n  );\n});\n\nexport default StackNav({\n  Transaksi: { screen: Transaksi },\n  TransaksiDetail: { screen: TransaksiDetail }\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAwBA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA2BA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AADA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;;;;A","sourceRoot":""}