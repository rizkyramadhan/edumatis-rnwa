{"version":3,"file":"static/webpack/static/development/pages/index.js.5110dad3c9a2a724e69d.hot-update.js","sources":["webpack:///./pages/app/screens/Login.tsx"],"sourcesContent":["import query from \"@app/libs/queries/crud/query\";\nimport { checkSession } from \"@app/libs/queries/user/checkSession\";\nimport UIButton from \"@app/libs/ui/UIButton\";\nimport UIFieldText from \"@app/libs/ui/UIFieldText\";\nimport UIImage from \"@app/libs/ui/UIImage\";\nimport { RootStore } from \"@app/stores/RootStore\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { StyleSheet, Text, View, ScrollView } from \"react-native\";\n\nexport default observer(({ navigation }: any) => {\n  const data = useObservable({\n    sekolah_id: \"\",\n    nsa: \"\",\n    password: \"\"\n  });\n  const meta = useObservable({\n    sekolah: \"\",\n    murid: \"\",\n    loading: true\n  });\n\n  useEffect(() => {\n    (async () => {\n      const session = await checkSession();\n      if (session && session.murid && session.murid.nsa) {\n        if (session.murid.nsa === \"admin\") {\n          navigation.replace(\"Admin\");\n        } else {\n          navigation.replace(\"Siswa\");\n        }\n        return;\n      }\n      meta.loading = false;\n    })();\n  }, []);\n\n  if (meta.loading) {\n    return (\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#fff\"\n        }}\n      >\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView\n      style={{\n        backgroundColor: \"#fff\"\n      }}\n      contentContainerStyle={{\n        alignItems: \"center\",\n        paddingTop: 100,\n        maxWidth: 800,\n        justifyContent: \"center\",\n        alignSelf: \"center\",\n        minWidth: 430\n      }}\n    >\n      <UIImage\n        source={require(\"@app/imgs/logob.png\")}\n        mobileStyle={{ height: 120, marginBottom: 20 }}\n        style={{ width: 200 }}\n      />\n      <UIFieldText\n        label=\"ID Sekolah\"\n        sublabel={meta.sekolah}\n        value={data.sekolah_id}\n        style={{ width: \"70%\" }}\n        setValue={(value: string) => (data.sekolah_id = value)}\n        onBlur={async () => {\n          try {\n            let res = await query(\"sekolah\", [\"nama_sekolah\"], {\n              where: { id: parseInt(data.sekolah_id) },\n              useSession: false\n            });\n            if (res && res.nama_sekolah) {\n              meta.sekolah = res.nama_sekolah;\n            } else {\n              meta.sekolah = \"Sekolah tidak ditemukan\";\n            }\n          } catch (e) {}\n        }}\n      />\n      <UIFieldText\n        label=\"Nomor Induk / NSA\"\n        sublabel={meta.murid}\n        value={data.nsa}\n        style={{ width: \"70%\" }}\n        setValue={(value: string) => (data.nsa = value)}\n        onBlur={async () => {\n          let res = await query(\"murid\", [\"nama_murid\"], {\n            where: { sekolah_id: parseInt(data.sekolah_id), nsa: data.nsa },\n            useSession: false\n          });\n          if (res && res.nama_murid) {\n            meta.murid = \"Nama: \" + res.nama_murid;\n          } else {\n            meta.murid = \"Nomor Induk tidak ditemukan\";\n          }\n        }}\n      />\n      <UIFieldText\n        type=\"password\"\n        label=\"Password\"\n        value={data.password}\n        setValue={(value: string) => (data.password = value)}\n        style={{ width: \"70%\" }}\n      />\n      <UIButton\n        style={{ width: \"50%\" }}\n        onPress={async () => {\n          meta.loading = true;\n          let session = await (RootStore.session as any).login(\n            data.sekolah_id,\n            data.nsa,\n            data.password\n          );\n\n          return;\n\n          if (session && session.murid && session.murid.nsa) {\n            if (session.murid.nsa === \"admin\") {\n              navigation.replace(\"Admin\");\n            } else {\n              navigation.replace(\"Siswa\");\n            }\n            return;\n          }\n          meta.loading = false;\n        }}\n      >\n        Login\n      </UIButton>\n    </ScrollView>\n  );\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AADA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAFA;AACA;AAHA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAFA;AACA;AAFA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAkBA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;;;;A","sourceRoot":""}