{"version":3,"file":"static/webpack/static/development/pages/index.js.0805f12e796dab8796d4.hot-update.js","sources":["webpack:///./pages/app/screens/Login.tsx","webpack:///./pages/app/screens/admin/Kewajiban/KewajibanDetail.tsx"],"sourcesContent":["import query from \"@app/libs/queries/crud/query\";\nimport UIButton from \"@app/libs/ui/UIButton\";\nimport UIFieldText from \"@app/libs/ui/UIFieldText\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport { RootStore } from \"@app/stores/RootStore\";\nimport { checkSession } from \"@app/libs/queries/user/checkSession\";\nimport UIImage from \"@app/libs/ui/UIImage\";\nimport { toJS } from \"mobx\";\n\nexport default observer(({ navigation }: any) => {\n  const data = useObservable({\n    sekolah_id: \"\",\n    nsa: \"\",\n    password: \"\"\n  });\n  const meta = useObservable({\n    sekolah: \"\",\n    murid: \"\",\n    loading: true\n  });\n\n  useEffect(() => {\n    (async () => {\n      const session = await checkSession();\n      if (session && session.murid && session.murid.nsa) {\n        if (session.murid.nsa === \"admin\") {\n          navigation.replace(\"Admin\");\n        } else {\n          navigation.replace(\"Siswa\");\n        }\n        return;\n      }\n      meta.loading = false;\n    })();\n  }, []);\n\n  if (meta.loading) {\n    return (\n      <View style={styles.container}>\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <UIImage\n        source={require(\"@app/imgs/logob.png\")}\n        mobileStyle={{ height: 120, marginBottom: 20 }}\n        style={{ width: 200 }}\n      />\n      <UIFieldText\n        label=\"ID Sekolah\"\n        sublabel={meta.sekolah}\n        value={data.sekolah_id}\n        style={{ width: \"70%\" }}\n        setValue={(value: string) => (data.sekolah_id = value)}\n        onBlur={async () => {\n          try {\n            let res = await query(\"sekolah\", [\"nama_sekolah\"], {\n              where: { id: parseInt(data.sekolah_id) },\n              useSession: false\n            });\n            if (res && res.nama_sekolah) {\n              meta.sekolah = res.nama_sekolah;\n            } else {\n              meta.sekolah = \"Sekolah tidak ditemukan\";\n            }\n          } catch (e) {}\n        }}\n      />\n      <UIFieldText\n        label=\"Nomor Induk / NSA\"\n        sublabel={meta.murid}\n        value={data.nsa}\n        style={{ width: \"70%\" }}\n        setValue={(value: string) => (data.nsa = value)}\n        onBlur={async () => {\n          let res = await query(\"murid\", [\"nama_murid\"], {\n            where: { sekolah_id: parseInt(data.sekolah_id), nsa: data.nsa },\n            useSession: false\n          });\n          if (res && res.nama_murid) {\n            meta.murid = \"Nama: \" + res.nama_murid;\n          } else {\n            meta.murid = \"Nomor Induk tidak ditemukan\";\n          }\n        }}\n      />\n      <UIFieldText\n        type=\"password\"\n        label=\"Password\"\n        value={data.password}\n        setValue={(value: string) => (data.password = value)}\n        style={{ width: \"70%\" }}\n      />\n      <UIButton\n        style={{ width: \"50%\" }}\n        onPress={async () => {\n          meta.loading = true;\n          let session = await (RootStore.session as any).login(\n            data.sekolah_id,\n            data.nsa,\n            data.password\n          );\n\n          if (session && session.murid && session.murid.nsa) {\n            if (session.murid.nsa === \"admin\") {\n              navigation.replace(\"Admin\");\n            } else {\n              navigation.replace(\"Siswa\");\n            }\n            return;\n          }\n          meta.loading = false;\n        }}\n      >\n        Login\n      </UIButton>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\"\n  }\n});\n","import createRecord from \"@app/libs/queries/crud/createRecord\";\nimport rawQuery from \"@app/libs/queries/crud/rawQuery\";\nimport updateRecord from \"@app/libs/queries/crud/updateRecord\";\nimport UIBody from \"@app/libs/ui/UIBody\";\nimport UIButton from \"@app/libs/ui/UIButton\";\nimport UICol from \"@app/libs/ui/UICol\";\nimport UIContainer from \"@app/libs/ui/UIContainer\";\nimport UIFieldSelectNative from \"@app/libs/ui/UIFieldSelectNative\";\nimport UIFieldText from \"@app/libs/ui/UIFieldText\";\nimport UIHead from \"@app/libs/ui/UIHead\";\nimport UIRow from \"@app/libs/ui/UIRow\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Text, View } from \"react-native\";\nimport KelasPicker from \"../Kelas/KelasPicker\";\n\nexport default observer(({ navigation }: any) => {\n  const data = useObservable({\n    form: navigation.getParam(\"item\")\n  });\n  useEffect(() => {\n    if (data.form.id) {\n      rawQuery(`\n      {\n        kewajiban(where: {id: {_eq: ${data.form.id}}}) {\n          kelas\n          batas_pembayaran\n          id\n          nominal\n          nama_kewajiban\n          status\n          tgl_batas_pembayaran_bulan\n          tipe_pembayaran\n        }\n      }\n    `).then((res: any) => {\n        data.form = res.kewajiban[0];\n      });\n    }\n  }, []);\n\n  return (\n    <UIContainer>\n      <UIHead\n        navigation={navigation}\n        title={\n          ` Kewajiban ` +\n          (data.form.id\n            ? `#${data.form.id}: ${data.form.nama_kewajiban}`\n            : `Baru`)\n        }\n        onBack={() => {\n          navigation.goBack();\n        }}\n      >\n        <UIButton\n          onPress={async () => {\n            if (data.form.id) {\n              await updateRecord(\"kewajiban\", data.form);\n            } else {\n              await createRecord(\"kewajiban\", data.form);\n            }\n            navigation.goBack();\n          }}\n        >\n          Simpan\n        </UIButton>\n      </UIHead>\n      <UIBody>\n        <UIFieldText\n          label=\"Nama Kewajiban\"\n          setValue={(value: any) => {\n            data.form.nama_kewajiban = value;\n          }}\n          value={data.form.nama_kewajiban}\n        />\n        <UIRow>\n          <UICol size={4} sizesm={6} sizexs={6}>\n            <UIFieldText\n              label=\"Nominal\"\n              setValue={(value: any) => {\n                data.form.nominal = value;\n              }}\n              value={data.form.nominal}\n            />\n          </UICol>\n          <UICol size={4} sizesm={6} sizexs={6}>\n            <UIFieldSelectNative\n              label=\"Tipe Pembayaran\"\n              items={[\"Bulanan\", \"Insidentil\"]}\n              setValue={(value: any) => {\n                data.form.tipe_pembayaran = value;\n              }}\n              value={data.form.tipe_pembayaran}\n            />\n          </UICol>\n        </UIRow>\n        <KelasPicker\n          form={data.form}\n          renderKelasTitle={(kelas: any) => (\n            <Text>Rp {parseInt(kelas.nominal).toLocaleString()} </Text>\n          )}\n          renderKelas={(kelas: any) => {\n            return (\n              <View>\n                <UIFieldText\n                  label=\"Nominal untuk semua murid kelas ini\"\n                  value={kelas.nominal}\n                  setValue={(value: any) => {\n                    kelas.nominal = value;\n                  }}\n                />\n                <Text style={{ padding: 10, paddingLeft: 15, color: \"#333\" }}>\n                  Khusus untuk murid ini, di set sesuai nominal tertera:\n                </Text>\n              </View>\n            );\n          }}\n          renderMurid={(murid: any, kelas: any) => {\n            return (\n              <UICol size={6}>\n                <UIFieldText\n                  label=\"Nominal\"\n                  value={murid.nominal || kelas.nominal}\n                  setValue={(value: any) => {\n                    murid.nominal = value;\n                  }}\n                />\n              </UICol>\n            );\n          }}\n        />\n      </UIBody>\n    </UIContainer>\n  );\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AADA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAFA;AACA;AAHA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAFA;AACA;AAFA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AADA;AAgBA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAcA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAMA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCA;;;;A","sourceRoot":""}