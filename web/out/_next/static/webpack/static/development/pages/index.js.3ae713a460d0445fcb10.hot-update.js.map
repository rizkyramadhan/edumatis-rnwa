{"version":3,"file":"static/webpack/static/development/pages/index.js.3ae713a460d0445fcb10.hot-update.js","sources":["webpack:///./pages/app/libs/nav/SideNav.tsx"],"sourcesContent":["import { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect, useRef } from \"react\";\nimport { View, TouchableWithoutFeedback } from \"react-native\";\nimport { Responsive, ResponsiveHandler } from \"../ui/Style\";\nimport NavContainer from \"./NavContainer\";\n\nconst absoluteSideBar = {\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  bottom: 0,\n  width: \"30%\",\n  flexDirection: \"row\",\n  alignItems: \"stretch\",\n  zIndex: 99\n};\nconst flexSideBar = {\n  width: \"30%\",\n  maxWidth: 280,\n  flexDirection: \"row\",\n  alignItems: \"stretch\"\n};\nconst overlay = {\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0,\n  backgroundColor: \"red\",\n  zIndex: 90\n};\n\nexport default (data: any, config: any = {}, isRoot: boolean = false) => {\n  const Container: any = NavContainer(data);\n\n  if (config.contentComponent) {\n    const SideBar = config.contentComponent;\n    return observer((props: any) => {\n      const ref = useRef({});\n      if (ref.current) {\n        (ref.current as any).toggleDrawer = function() {\n          obs.opened = !obs.opened;\n        };\n      }\n      const obs: any = useObservable({\n        opened: false\n      });\n      useEffect(ResponsiveHandler(obs), []);\n      return (\n        <View\n          style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            bottom: 0,\n            top: 0,\n            flexDirection: \"row\",\n            alignItems: \"stretch\"\n          }}\n        >\n          <View\n            style={Responsive(\n              {\n                xs: {\n                  ...absoluteSideBar,\n                  ...{\n                    minWidth: \"50%\"\n                  },\n                  transform: [{ scale: obs.opened ? 1 : 0 }]\n                },\n                sm: {\n                  ...absoluteSideBar,\n                  ...{\n                    minWidth: \"50%\"\n                  },\n                  transform: [{ scale: obs.opened ? 1 : 0 }]\n                },\n                md: { ...flexSideBar, transform: [{ scale: 1 }] },\n                lg: { ...flexSideBar, transform: [{ scale: 1 }] },\n                xl: { ...flexSideBar, transform: [{ scale: 1 }] },\n                xxl: { ...flexSideBar, transform: [{ scale: 1 }] }\n              },\n              obs.width\n            )}\n          >\n            <SideBar navigation={ref.current} />\n          </View>\n          {obs.opened && (\n            <TouchableWithoutFeedback\n              onPress={() => {\n                obs.opened = false;\n              }}\n              style={Responsive(\n                {\n                  xs: {\n                    ...overlay\n                  },\n                  sm: {\n                    ...overlay\n                  },\n                  md: {},\n                  lg: {},\n                  xl: {},\n                  xxl: {}\n                },\n                obs.width\n              )}\n            />\n          )}\n          <Container ref={ref} parentNavigation={props.navigation} />\n        </View>\n      );\n    });\n  } else {\n    return () => {\n      return <Container />;\n    };\n  }\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAEA;AAGA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAGA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AAVA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}